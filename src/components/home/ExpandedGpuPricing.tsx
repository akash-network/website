import { gpus } from "@/utils/api";
import {
  QueryClient,
  QueryClientProvider,
  useQuery,
} from "@tanstack/react-query";
import axios from "axios";
import clsx from "clsx";
import { ChevronDown } from "lucide-react";
import { useEffect, useState } from "react";
import type { Gpus } from "../gpu-table/gpu-table";

const ExpandedGpuPricing = () => {
  const queryClient = new QueryClient();
  return (
    <QueryClientProvider client={queryClient}>
      <ExpandedGpu />
    </QueryClientProvider>
  );
};

const ExpandedGpu = () => {
  const fetchInterval = 1000 * 60;

  const {
    data: result,
    isLoading,
    isInitialLoading,
  } = useQuery<
    {
      data: Gpus;
    },
    Error
  >({
    queryKey: ["GPU_TABLE"],
    queryFn: () => axios.get(gpus),
    refetchIntervalInBackground: true,

    refetchInterval: fetchInterval,
  });
  const gpuTypes = [
    {
      name: "Gpu Type",
    },
    {
      name: "Akash Network",

      mobileName: "Akash",
      selected: true,
      svg: ` <svg
          
          viewBox="0 0 26 23"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16.9224 15.141L20.961 22.2187H12.803L8.7218 15.141H16.9224Z"
            fill="url(#paint0_linear_84_299)"
          />
          <path
            d="M20.9588 22.2195L25.0333 15.1417L16.8776 0.98291H8.7218L20.9588 22.2195Z"
            fill="white"
          />
          <path
            d="M4.64461 8.0592H12.8004L4.64801 22.2181L0.566772 15.1403L4.64461 8.0592Z"
            fill="white"
          />
          <defs>
            <linearGradient
              id="paint0_linear_84_299"
              x1="18.5"
              y1="21.5"
              x2="21.5142"
              y2="18.5143"
              gradientUnits="userSpaceOnUse"
            >
              <stop stop-color="white" />
              <stop offset="1" stop-color="white" stop-opacity="0" />
            </linearGradient>
          </defs>
        </svg>`,
    },
    {
      name: "AWS",

      svg: `  <svg
         
  
          viewBox="0 0 24 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clip-path="url(#clip0_84_307)">
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M7.65193 10.7911C7.65193 11.0498 7.67987 11.2595 7.72881 11.4133C7.78474 11.5671 7.85466 11.7349 7.95255 11.9166C7.9875 11.9726 8.00148 12.0285 8.00148 12.0774C8.00148 12.1474 7.95955 12.2172 7.86867 12.2872L7.42821 12.5808C7.36527 12.6227 7.30241 12.6437 7.24647 12.6437C7.17655 12.6437 7.10669 12.6088 7.03674 12.5459C6.93888 12.441 6.855 12.3291 6.78508 12.2173C6.71516 12.0984 6.64529 11.9656 6.56834 11.8048C6.02302 12.448 5.33793 12.7695 4.51301 12.7695C3.92581 12.7695 3.45741 12.6017 3.11486 12.2662C2.77232 11.9306 2.59753 11.4832 2.59753 10.9239C2.59753 10.3297 2.80727 9.84731 3.23374 9.48378C3.66021 9.12025 4.22648 8.93851 4.94648 8.93851C5.18416 8.93851 5.42889 8.95945 5.68756 8.99445C5.94622 9.02939 6.21189 9.0853 6.49149 9.14824V8.63792C6.49149 8.10658 6.37962 7.73612 6.16288 7.51938C5.93914 7.30264 5.56167 7.19777 5.02336 7.19777C4.7787 7.19777 4.52701 7.22572 4.26835 7.28863C4.00968 7.35155 3.75802 7.42842 3.51334 7.52631C3.40147 7.57524 3.31762 7.60318 3.26869 7.61717C3.21976 7.63115 3.18481 7.6381 3.15682 7.6381C3.05895 7.6381 3.01002 7.56818 3.01002 7.42136V7.07882C3.01002 6.96695 3.02403 6.8831 3.05895 6.83417C3.09388 6.78523 3.15682 6.7363 3.25468 6.68737C3.49933 6.56152 3.793 6.45665 4.13554 6.37277C4.47813 6.28191 4.84162 6.23996 5.22614 6.23996C6.05807 6.23996 6.66628 6.42871 7.05773 6.80622C7.44225 7.18376 7.638 7.75695 7.638 8.52597V10.791H7.65201L7.65196 10.7911H7.65193ZM4.8136 11.8537C5.04432 11.8537 5.282 11.8118 5.53366 11.7279C5.78532 11.644 6.00906 11.4902 6.19778 11.2805C6.30965 11.1477 6.3935 11.0008 6.43551 10.8331C6.47743 10.6653 6.50537 10.4625 6.50537 10.2249V9.93124C6.30265 9.88231 6.08591 9.84039 5.86224 9.81237C5.6385 9.78442 5.42184 9.77044 5.2051 9.77044C4.7367 9.77044 4.39415 9.8613 4.16343 10.0501C3.93271 10.2388 3.82089 10.5045 3.82089 10.854C3.82089 11.1826 3.90477 11.4273 4.07955 11.595C4.24736 11.7698 4.49202 11.8537 4.81362 11.8537L4.81357 11.8536L4.8136 11.8537ZM10.4273 12.6087C10.3014 12.6087 10.2175 12.5878 10.1616 12.5388C10.1056 12.4969 10.0567 12.399 10.0148 12.2661L8.37194 6.86216C8.33001 6.72237 8.309 6.63149 8.309 6.58256C8.309 6.47068 8.36494 6.40777 8.47681 6.40777H9.16195C9.29475 6.40777 9.38569 6.42876 9.43462 6.47769C9.49056 6.51962 9.53248 6.61748 9.57441 6.75036L10.7489 11.3783L11.8395 6.75036C11.8744 6.61058 11.9164 6.51964 11.9723 6.47769C12.0282 6.43574 12.1261 6.40777 12.2519 6.40777H12.8112C12.944 6.40777 13.0349 6.42876 13.0909 6.47769C13.1468 6.51962 13.1957 6.61748 13.2237 6.75036L14.3282 11.4342L15.5377 6.75036C15.5796 6.61058 15.6285 6.51964 15.6775 6.47769C15.7334 6.43576 15.8242 6.40777 15.9501 6.40777H16.6003C16.7121 6.40777 16.7751 6.46371 16.7751 6.58256C16.7751 6.6175 16.768 6.65248 16.761 6.69443C16.754 6.73638 16.7401 6.79229 16.7121 6.86922L15.0273 12.2732C14.9854 12.413 14.9365 12.5038 14.8805 12.5458C14.8246 12.5878 14.7337 12.6158 14.6148 12.6158H14.0136C13.8808 12.6158 13.7899 12.5948 13.734 12.5458C13.6781 12.4969 13.6291 12.406 13.6012 12.2662L12.5176 7.75706L11.441 12.2592C11.406 12.399 11.364 12.4898 11.3081 12.5388C11.2522 12.5877 11.1543 12.6087 11.0285 12.6087H10.4273ZM19.4105 12.7974C19.047 12.7974 18.6835 12.7555 18.3339 12.6716C17.9844 12.5878 17.7117 12.4969 17.53 12.392C17.4181 12.329 17.3412 12.2592 17.3132 12.1963C17.2853 12.1333 17.2713 12.0635 17.2713 12.0005V11.644C17.2713 11.4972 17.3273 11.4273 17.4321 11.4273C17.474 11.4273 17.516 11.4343 17.5579 11.4483C17.5998 11.4622 17.6628 11.4902 17.7327 11.5182C17.9704 11.623 18.2291 11.7069 18.5017 11.7628C18.7814 11.8188 19.054 11.8467 19.3336 11.8467C19.774 11.8467 20.1166 11.7698 20.3543 11.616C20.592 11.4622 20.7178 11.2385 20.7178 10.9519C20.7178 10.7561 20.6549 10.5953 20.5291 10.4625C20.4032 10.3297 20.1656 10.2109 19.823 10.099L18.8093 9.7844C18.299 9.6236 17.9215 9.38592 17.6908 9.07134C17.4601 8.76375 17.3413 8.42121 17.3413 8.05767C17.3413 7.76406 17.4042 7.5054 17.53 7.28168C17.6558 7.05796 17.8236 6.86221 18.0334 6.70841C18.2431 6.54761 18.4808 6.42881 18.7604 6.34488C19.0401 6.26095 19.3337 6.22595 19.6413 6.22595C19.7951 6.22595 19.9559 6.23296 20.1097 6.25389C20.2705 6.27488 20.4173 6.30283 20.5641 6.33077C20.7039 6.36571 20.8368 6.40069 20.9626 6.44264C21.0884 6.48459 21.1863 6.52652 21.2562 6.5685C21.3541 6.62443 21.424 6.68037 21.4659 6.74323C21.5079 6.79917 21.5289 6.87609 21.5289 6.97395V7.30256C21.5289 7.44936 21.4729 7.52631 21.3681 7.52631C21.3121 7.52631 21.2213 7.49831 21.1024 7.44238C20.7039 7.26064 20.2565 7.1697 19.7602 7.1697C19.3617 7.1697 19.0471 7.23264 18.8304 7.36543C18.6136 7.49821 18.5018 7.70097 18.5018 7.98763C18.5018 8.18335 18.5717 8.35116 18.7115 8.48397C18.8513 8.61678 19.11 8.74964 19.4805 8.86844L20.4732 9.18304C20.9766 9.34384 21.3401 9.56756 21.5568 9.85417C21.7735 10.1408 21.8784 10.4694 21.8784 10.8329C21.8784 11.1335 21.8155 11.4062 21.6967 11.6438C21.5708 11.8816 21.4031 12.0912 21.1863 12.259C20.9696 12.4338 20.7109 12.5596 20.4103 12.6505C20.0957 12.7484 19.7672 12.7973 19.4106 12.7973L19.4106 12.7974L19.4105 12.7974Z"
              fill="#8A8F98"
            />
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M20.7338 16.1947C18.4338 17.8936 15.0921 18.7954 12.2189 18.7954C8.19213 18.7954 4.56392 17.3063 1.82347 14.8316C1.60673 14.6358 1.80253 14.3702 2.0612 14.524C5.02534 16.2437 8.68159 17.2854 12.4636 17.2854C15.0153 17.2854 17.8186 16.754 20.3983 15.6634C20.7827 15.4886 21.1113 15.9151 20.7338 16.1948V16.1947Z"
              fill="#8A8F98"
            />
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M21.6896 15.1042C21.396 14.7266 19.7462 14.9224 18.9982 15.0133C18.7744 15.0413 18.7395 14.8455 18.9422 14.6987C20.2565 13.7759 22.4167 14.0416 22.6684 14.3492C22.92 14.6638 22.5984 16.824 21.3681 17.8586C21.1793 18.0194 20.9976 17.9355 21.0815 17.7258C21.3611 17.0337 21.9833 15.4747 21.6897 15.1042H21.6896V15.1042Z"
              fill="#8A8F98"
            />
          </g>
          <defs>
            <clipPath id="clip0_84_307">
              <rect
                width="21.0195"
                height="12.5697"
                fill="white"
                transform="translate(1.73047 6.2262)"
              />
            </clipPath>
          </defs>
        </svg>`,
    },
    {
      name: "Google Cloud",

      mobileName: "GCP",
      svg: ` <svg
     
          viewBox="0 0 21 17"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clip-path="url(#clip0_84_320)">
            <path
              d="M13.3841 4.70701L14.0476 4.71672L15.8504 2.91388L15.9378 2.15002C14.5072 0.878003 12.6202 0.101196 10.5552 0.101196C6.82006 0.101196 3.66752 2.642 2.73535 6.08584C2.93279 5.9499 3.35356 6.05024 3.35356 6.05024L6.956 5.45792C6.956 5.45792 7.14049 5.15044 7.23436 5.16662C8.08561 4.23122 9.29289 3.69716 10.5584 3.69716C11.6265 3.69716 12.6105 4.07586 13.3841 4.70054V4.70701Z"
              fill="#8A8F98"
            />
            <path
              d="M18.3794 6.09232C17.9619 4.54841 17.0977 3.18577 15.9325 2.15002L13.3787 4.70378C14.4015 5.52913 15.0586 6.79144 15.0586 8.20588V8.65578C16.3015 8.65578 17.3081 9.66563 17.3081 10.9053C17.3081 12.1449 16.2982 13.1548 15.0586 13.1548H10.5563L10.1064 13.6079V16.3106L10.5563 16.7572H15.0586C18.2888 16.754 20.9073 14.1355 20.9105 10.9053C20.9105 8.91472 19.9072 7.15072 18.3762 6.08908L18.3794 6.09232Z"
              fill="#8A8F98"
            />
            <path
              d="M6.0504 16.7648H10.5494V13.1592H6.0504C5.72997 13.1592 5.41601 13.0912 5.12471 12.9585L4.47413 13.1592L2.67129 14.962L2.5127 15.5705C3.52902 16.3441 4.77191 16.7648 6.0504 16.7648Z"
              fill="#8A8F98"
            />
            <path
              d="M6.05214 5.05835C2.82192 5.06159 0.203432 7.68007 0.200195 10.9103C0.200195 12.8102 1.10971 14.503 2.52091 15.5711L5.12968 12.9624C4.32374 12.5998 3.80264 11.7971 3.80264 10.9103C3.80264 9.6674 4.81248 8.66079 6.05214 8.66079C6.96489 8.66079 7.74817 9.21103 8.1042 9.98783L10.713 7.37906C9.64163 5.9711 7.95208 5.05835 6.05214 5.05835Z"
              fill="#8A8F98"
            />
          </g>
          <defs>
            <clipPath id="clip0_84_320">
              <rect
                width="20.7148"
                height="16.6625"
                fill="white"
                transform="translate(0.200195 0.101196)"
              />
            </clipPath>
          </defs>
        </svg>`,
    },
    {
      name: "Coreweave",
      price: "$25.12",
      svg: ` <svg
       
          viewBox="0 0 21 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clip-path="url(#clip0_84_330)">
            <path
              d="M7.36843 0.101681H13.3315L7.14125 18.4538C7.10961 18.5475 7.06353 18.6358 7.0047 18.7153C6.94603 18.7948 6.87525 18.8647 6.79487 18.9224C6.71449 18.9801 6.6258 19.0249 6.53162 19.0551C6.43744 19.0854 6.33915 19.101 6.24045 19.101H1.59956C1.44888 19.101 1.30031 19.0652 1.16626 18.9961C1.03213 18.9273 0.916327 18.8275 0.828441 18.7049C0.740556 18.5823 0.683015 18.4406 0.66066 18.2915C0.638225 18.1424 0.651864 17.99 0.699963 17.8472L6.46738 0.748351C6.49886 0.654655 6.54494 0.566447 6.60393 0.486875C6.6626 0.407302 6.7337 0.337494 6.81376 0.279791C6.89414 0.222089 6.98283 0.177299 7.07701 0.147035C7.17119 0.116772 7.26949 0.101196 7.36819 0.101196V0.101438L7.36843 0.101681Z"
              fill="#8A8F98"
            />
            <path
              d="M18.3603 19.1014H13.0059C12.9461 19.1014 12.8864 19.0959 12.8275 19.0846C12.7688 19.0735 12.7111 19.0569 12.6555 19.0349C12.5998 19.013 12.5463 18.9858 12.4957 18.9541C12.4451 18.9221 12.3977 18.8855 12.354 18.8447L6.27776 13.17C6.21352 13.11 6.16873 13.0321 6.14928 12.9463C6.1095 12.7708 6.18116 12.5889 6.3299 12.4876C6.40269 12.4382 6.48864 12.4117 6.57652 12.4117H16.0325L18.3599 19.1016L18.3604 19.1014L18.3603 19.1014Z"
              fill="#8A8F98"
            />
            <path
              d="M13.3512 0.101207L9.1769 12.4121L15.9972 12.4105L18.3368 19.1004H13.0025C12.9473 19.0999 12.8922 19.0948 12.8378 19.0851C12.7834 19.0753 12.73 19.0609 12.6781 19.0417C12.5741 19.0038 12.4772 18.9484 12.3919 18.8777L8.29022 15.0496L7.14198 18.4359C7.11228 18.5205 7.07144 18.6009 7.02052 18.6747C6.91851 18.8232 6.77906 18.942 6.6162 19.0191C6.53509 19.0574 6.44931 19.0847 6.36102 19.1004H1.60061C1.44848 19.1009 1.2983 19.0646 1.16304 18.9946C0.888488 18.8526 0.700289 18.5858 0.658727 18.2794C0.63831 18.1284 0.65445 17.9747 0.705858 17.8313L6.46383 0.76071C6.49377 0.665238 6.53889 0.575336 6.59732 0.494149C6.6555 0.413042 6.72652 0.341459 6.80714 0.282546C6.88777 0.223633 6.97743 0.177713 7.07241 0.147046C7.1674 0.116299 7.26691 0.100723 7.3669 0.101207H13.3514H13.3512Z"
              fill="#8A8F98"
            />
            <path
              d="M20.7514 17.8467C20.7996 17.9896 20.8131 18.1419 20.791 18.291C20.7686 18.4402 20.7112 18.5818 20.6234 18.7044C20.4452 18.9529 20.1581 19.1003 19.8523 19.1004H13.2063C13.357 19.1004 13.5056 19.0644 13.6398 18.9956C13.7739 18.9268 13.8898 18.8268 13.9777 18.7044C14.0655 18.582 14.123 18.4402 14.1454 18.291C14.1679 18.1419 14.1542 17.9895 14.1061 17.8467L8.33856 0.747383C8.27505 0.559023 8.15407 0.395358 7.99267 0.279307C7.91253 0.221605 7.82392 0.177057 7.7299 0.146793C7.63588 0.11653 7.53767 0.101196 7.43921 0.101196H14.085C14.1838 0.101196 14.2817 0.11653 14.3759 0.146793C14.4699 0.177057 14.5586 0.221847 14.6389 0.279307C14.7191 0.33701 14.7899 0.406737 14.8485 0.486148C14.9072 0.56556 14.953 0.653687 14.9848 0.747383L20.7524 17.8467H20.7514Z"
              fill="#8A8F98"
            />
          </g>
          <defs>
            <clipPath id="clip0_84_330">
              <rect
                width="20.152"
                height="19"
                fill="white"
                transform="translate(0.650146 0.101196)"
              />
            </clipPath>
          </defs>
        </svg>`,
    },
  ];

  const initialPricing = [
    ["H200", "$1.40", "$3.45", "$4.58", "$5.78"],
    ["H100", "$1.12", "$3.78", "$1.23", "$2.34"],
    ["A100", "$0.76", "$0.83", "$1.00", "$1.56"],
  ];

  const [prices, setPrices] = useState(initialPricing);

  const [expanded, setExpanded] = useState(false);

  useEffect(() => {
    const data = initialPricing;
    if (result) {
      const a100Price = result?.data?.models?.find((model) =>
        model?.model?.includes("a100"),
      )?.price?.avg;
      const h100Price = result?.data?.models?.find((model) =>
        model?.model?.includes("h100"),
      )?.price?.avg;
      const h200Price = result?.data?.models?.find((model) =>
        model?.model?.includes("h200"),
      )?.price?.avg;

      if (h100Price) {
        data[1][1] = `$${h100Price?.toFixed(2)?.toString()}`;
      }
      if (a100Price) {
        data[2][1] = `$${a100Price?.toFixed(2)?.toString()}`;
      }
      if (h200Price) {
        data[0][1] = `$${h200Price?.toFixed(2)?.toString()}`;
      }
      setPrices(data);
    }
  }, [result]);
  console.log(result);
  return (
    <div className="flex flex-col justify-center gap-8 md:gap-16">
      <h2 className="text-center text-2xl font-semibold md:text-[40px]">
        GPU's at Costs <br className="md:hidden" /> That Scale
      </h2>
      <div className="shadow">
        <div className="grid w-full grid-cols-5 rounded-t-lg border">
          {gpuTypes.map((item, index) => (
            <div
              className={clsx(
                "flex flex-col",
                item.selected && " -mt-1 md:-mt-2",
                index !== gpuTypes.length - 1 && index !== 1 && "border-r",
              )}
            >
              <h3
                className={clsx(
                  "flex w-full items-center justify-center gap-1 py-2.5 text-[10px] md:gap-2 md:py-4  md:text-sm lg:text-lg",
                  index === 0 && "rounded-tl-md md:rounded-tl-lg",
                  index === gpuTypes.length - 1 &&
                    "rounded-tr-md md:rounded-tr-lg",
                  item.selected
                    ? "rounded-t-md border-b !border-[#DC1D28] bg-primary py-3 text-white md:rounded-t-lg  md:py-5"
                    : "border-b bg-black dark:text-[#8A8F98]",
                )}
              >
                <div
                  dangerouslySetInnerHTML={{ __html: item.svg ?? "" }}
                  className={clsx(
                    !item.selected && "hidden lg:block",
                    "size-4 md:size-6",
                  )}
                />
                <span className="hidden md:block">{item.name}</span>
                <span className="block md:hidden">
                  {item.mobileName ?? item.name}
                </span>
              </h3>
              <h4
                style={
                  item.selected && !expanded
                    ? {
                        background:
                          "linear-gradient(180deg, #FF414C 19.3%, #C4262F 100%)",
                      }
                    : {}
                }
                className={clsx(
                  "bg-background py-2.5 text-center text-sm font-semibold md:py-4 md:text-xl  ",
                  item.selected && " text-white",
                  item.selected && expanded && "bg-primary",
                )}
              >
                {prices[0][index]}
              </h4>
            </div>
          ))}
          {expanded && (
            <div className="col-span-5 flex flex-col">
              {prices.slice(1).map((item, index) => (
                <div className="grid grid-cols-5" key={index}>
                  {item.map((item, i) => (
                    <h4
                      style={
                        index === 1 && i === 1
                          ? {
                              background:
                                "linear-gradient(180deg, #FF414C 19.3%, #C4262F 100%)",
                            }
                          : {}
                      }
                      key={i}
                      className={clsx(
                        " py-2.5 text-center text-sm font-semibold md:py-4 md:text-xl ",
                        i === 1 ? " border-t !border-[#DC1D28]" : "border-t",
                        i === 1 && index !== 1
                          ? "bg-primary  text-white"
                          : "bg-background",
                        i !== item.length - 1 && i !== 1 && "border-r",
                      )}
                    >
                      {item}
                    </h4>
                  ))}
                </div>
              ))}
            </div>
          )}
        </div>
        <button
          onClick={() => setExpanded(!expanded)}
          className="flex  w-full items-center justify-center gap-1 rounded-b-md border-x border-b bg-background py-2.5 font-medium md:rounded-b-lg md:py-4"
        >
          <p className="text-xs text-white md:text-base">
            View more GPU pricing
          </p>
          <ChevronDown className={clsx("h-4 w-4", expanded && "rotate-180")} />
        </button>
      </div>
    </div>
  );
};

export default ExpandedGpuPricing;
