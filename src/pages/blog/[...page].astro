---
import SearchDialog from "@/components/blog/search-dialog";
import PostCard from "@/components/cards/post-card.astro";
import Pagination from "@/components/pagination.astro";
import Tag2 from "@/components/ui/tag2.astro";
import Layout from "@/layouts/layout.astro";
import type { PaginateFunction } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";

type BlogPost = CollectionEntry<"Blog">;

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const posts = (await getCollection("Blog"))
    .filter((post) => {
      return post.data.archive !== true;
    })
    .sort((a, b) => {
      const dateA = new Date(a.data.pubDate);
      const dateB = new Date(b.data.pubDate);

      return dateB.getTime() - dateA.getTime();
    });

  const categories: string[] = [];

  posts.forEach((post) => {
    post.data.categories.forEach((category) => {
      const lowerCasedCategory = category.toLowerCase();
      if (!categories.includes(category)) {
        categories.push(category);
      }
    });
  });

  const pinnedPost: BlogPost = posts[0];
  posts.shift();
  return paginate(posts, {
    props: { categories: categories, pinnedPost: pinnedPost },
    pageSize: 12,
  });
}

const { page, categories, pinnedPost } = Astro.props;

const pathName = Astro.url.pathname.split("/");
---

<Layout
  title="Akash Network Blog - Insights into Decentralized Cloud Computing"
  description="Stay updated with the latest trends, news, and insights in decentralized cloud computing. Explore thought leadership, technical deep-dives, and community highlights."
  image={pinnedPost.data.bannerImage.src}
>
  <div class="container mt-[120px]">
    {
      page.currentPage === 1 && (
        <a class="flex cursor-pointer" href={`/blog/${pinnedPost.slug}`}>
          <PostCard
            type="large"
            title={pinnedPost.data.title}
            image={pinnedPost.data.bannerImage}
            tag={pinnedPost.data.categories[0]}
            contributor={pinnedPost.data.contributors[0]}
            pubDate={pinnedPost.data.pubDate}
            description={pinnedPost.data.description}
          />
        </a>
      )
    }
  </div>

  <div class="container mt-[120px]">
    <div
      class="lg: flex flex-col items-start justify-between gap-x-5 border-b pb-0 pb-5 lg:flex-row lg:border-none"
    >
      <div
        class="sidebar-scroll flex max-w-full items-center justify-start gap-2 overflow-auto pb-1"
      >
        <Tag2
          active={pathName[1]?.toLowerCase() === "blog" && !pathName[2]}
          href={`/blog`}
        >
          All Posts
        </Tag2>

        {
          categories.map((category: string) => {
            return (
              <Tag2
                href={
                  category.toLowerCase() === "archive"
                    ? `/blog/archived.astro`
                    : `/blog/${category.toLowerCase()?.replaceAll(" ", "-")}/1`
                }
                active={pathName[2]?.toLowerCase() === category.toLowerCase()}
              >
                {category.charAt(0).toUpperCase() + category.slice(1)}
              </Tag2>
            );
          })
        }

        <Tag2
          active={pathName[2]?.toLowerCase() === "archived"}
          href={`/blog/archived`}
        >
          Archive
        </Tag2>
      </div>

      <div class="hidden lg:block">
        <SearchDialog client:load />
      </div>
    </div>

    <div class="mt-5 flex justify-end lg:hidden">
      <SearchDialog client:load />
    </div>
    <!-- Posts grid -->
    <div
      class="mt-10 grid grid-cols-1 gap-10 sm:grid-cols-2 lg:mt-[80px] lg:grid-cols-3 lg:gap-16"
    >
      {
        page.data.map((post: BlogPost, i: number) => {
          return (
            <a class="flex cursor-pointer " href={`/blog/${post.slug}`}>
              <PostCard
                title={post.data.title}
                image={post.data.bannerImage}
                tag={post.data.categories[0]}
                contributor={post.data.contributors[0]}
                pubDate={post.data.pubDate}
                description={post.data.description}
              />
            </a>
          );
        })
      }
    </div>

    <Pagination page={page} />
  </div>
</Layout>
